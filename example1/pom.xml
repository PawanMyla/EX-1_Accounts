import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Prompt the user for input
        System.out.println("Enter details in the following format:");
        System.out.println("customerNumber,firstName,surname|primaryPhone,secondaryPhone,countryCode,phoneType;primaryPhone,secondaryPhone,countryCode,phoneType|accountNumber,balance,productCode,productModes,linkedAccounts;accountNumber,balance,productCode,productModes,linkedAccounts");

        String input = scanner.nextLine();  // Get the input from user

        // --- Step 1: Split the input into sections ---
        String[] sections = input.split("\\|");

        // --- Step 2: Handle customer details ---
        String[] customerDetails = sections[0].split(",");
        String customerNumber = customerDetails[0];
        String firstName = customerDetails[1];
        String surname = customerDetails[2];

        // --- Step 3: Handle phone details ---
        String[] phoneDetailsInput = sections[1].split(";"); // Separate multiple phones with ;
        List<PhoneDetails> phoneDetailsList = new ArrayList<>();
        
        for (String phoneStr : phoneDetailsInput) {
            String[] phoneData = phoneStr.split(","); // Get each phone's details
            String primaryPhone = phoneData[0];
            String secondaryPhone = phoneData[1];
            String countryCode = phoneData[2].isEmpty() ? "+91" : phoneData[2]; // Default to +91 if empty
            String phoneType = phoneData[3];
            
            PhoneDetails phoneDetails = new PhoneDetails(primaryPhone, secondaryPhone, countryCode, phoneType);
            phoneDetailsList.add(phoneDetails);  // Add phone details to the list
        }

        // --- Step 4: Handle account details ---
        String[] accountDetailsInput = sections[2].split(";"); // Separate multiple accounts with ;
        List<Account> accountList = new ArrayList<>();
        
        for (String accountStr : accountDetailsInput) {
            String[] accountData = accountStr.split(",");
            String accountNumber = accountData[0];
            double balance = Double.parseDouble(accountData[1]); // Convert balance to double
            String productCode = accountData[2];
            List<String> productModes = Arrays.asList(accountData[3].split("/")); // Split modes by /
            List<String> linkedAccounts = Arrays.asList(accountData[4].split("/")); // Split linked accounts by /
            
            Account account = new Account(accountNumber, balance, productCode, productModes, linkedAccounts);
            accountList.add(account);  // Add account to the list
        }

        // --- Step 5: Create Customer object ---
        Customer customer = new Customer(customerNumber, firstName, surname, phoneDetailsList);

        // --- Step 6: Output details ---

        // Customer information
        System.out.println("\nCustomer Information:");
        System.out.println("Customer Number: " + customer.getCustomerNumber());
        System.out.println("Full Name: " + customer.getFullName());

        // Print all phone details
        for (PhoneDetails phone : phoneDetailsList) {
            System.out.println(phone.getPhoneType() + " Phone: " + phone.getPrimaryNumber() + ", Secondary: " + phone.getSecondaryNumber());
        }

        // Print all linked account numbers
        System.out.println("\nLinked Account Numbers:");
        for (Account account : accountList) {
            for (String linkedAccount : account.getLinkedAccountNumbers()) {
                System.out.println(linkedAccount);
            }
        }

        // Print all product modes
        System.out.println("\nProduct Modes:");
        for (Account account : accountList) {
            for (String productMode : account.getProductModeList()) {
                System.out.println(productMode);
            }
        }

        // Print account balances
        System.out.println("\nAccount Balances:");
        for (Account account : accountList) {
            System.out.println("Account Number: " + account.getAccountNumber() + ", Current Balance: " + account.getCurrentBalance());
        }

        scanner.close();  // Close the scanner
    }
}
